Гексагональная архитектура, также известная как порт-адаптерная архитектура
или шестигранная архитектура, представляет собой метод проектирования программного
обеспечения. Её основная идея заключается в том, что приложение разделяется на
различные слои, или "шестиугольники", каждый из которых имеет определенную функциональность.
Вот основные компоненты гексагональной архитектуры:
Внешний слой (Adapter):
Этот слой содержит все внешние аспекты приложения, такие как интерфейсы
пользователя, HTTP-запросы, базы данных, файловая система и т.д. Все эти
внешние аспекты представлены адаптерами.
Прикладной слой (Use Cases):
Этот слой содержит бизнес-логику и основные операции приложения. Он не знает н
ичего о том, как реализованы внешние аспекты. Вместо этого, он определяет,
какие операции приложение должно выполнять.
Внутренний слой (Core):
Это ядро приложения, которое содержит бизнес-логику и сущности. Здесь определены
основные объекты и операции, которые не зависят от внешних аспектов.
Порты (Ports):
Порты представляют собой интерфейсы, которые определены во внутреннем слое, но
реализуются во внешнем слое. Они определяют контракты, через которые внешний
мир может взаимодействовать с приложением.
Адаптеры (Adapters):
Адаптеры реализуют порты во внешнем слое. Они предоставляют реальные реализации
интерфейсов, необходимых для взаимодействия с внешним миром.
Основные преимущества гексагональной архитектуры:
Разделение ответственности: Она позволяет четко разделить бизнес-логику от внешних
зависимостей, что облегчает тестирование и поддержку кода.
Гибкость и заменяемость: Благодаря строгому разделению между внутренним и внешним
слоем, вы можете легко заменить или обновить внешние зависимости без внесения
изменений в основной код.
Тестирование: Эта архитектура позволяет легко создавать модульные тесты для
бизнес-логики, так как она хорошо изолирована от внешних факторов.